> batch -f=command/printCommandError.txt
Executing command: [batch, -f=command/printCommandError.txt]
Start batch mode. file=C:\projects\github\hondams\dbunit-tools\command\printCommandError.txt
> # <Usage>
> # batch -f=command/printCommandError.txt
>
> batch -f=command/test/notFoundFile.txt
Executing command: [batch, -f=command/test/notFoundFile.txt]
File not found: C:\projects\github\hondams\dbunit-tools\command\test\notFoundFile.txt
>
> dbdef column -t=NOT_FOUND_TABLE
Executing command: [dbdef, column, -t=NOT_FOUND_TABLE]
Table not found: [NOT_FOUND_TABLE]
>
> dbdef export  -t=dummy -o=command/test/notDirectory/dbdef.json
Executing command: [dbdef, export, -t=dummy, -o=command/test/notDirectory/dbdef.json]
Failed to create directories: command\test\notDirectory
>
> export table -t=dummy -o=command/test/notDirectory/data.xml
Executing command: [export, table, -t=dummy, -o=command/test/notDirectory/data.xml]
Failed to create directories: command\test\notDirectory
>
> export table -t=NOT_FOUND_TABLE -o=command/test/data.xml
Executing command: [export, table, -t=NOT_FOUND_TABLE, -o=command/test/data.xml]
Table not found: [NOT_FOUND_TABLE]
>
> export sql "SELECT * FROM DUAL"  -ot=dummy -o=command/test/notDirectory/data.xml
Executing command: [export, sql, SELECT * FROM DUAL, -ot=dummy, -o=command/test/notDirectory/data.xml]
Failed to create directories: command\test\notDirectory
>
> export empty -t=dummy -o=command/test/notDirectory/data.xml
Executing command: [export, empty, -t=dummy, -o=command/test/notDirectory/data.xml]
Failed to create directories: command\test\notDirectory
>
> export empty -t=NOT_FOUND_TABLE -o=command/test/data.xml
Executing command: [export, empty, -t=NOT_FOUND_TABLE, -o=command/test/data.xml]
Table not found: [NOT_FOUND_TABLE]
>
> import -i=notFoundFile.txt
Executing command: [import, -i=notFoundFile.txt]
File1 not found: C:\projects\github\hondams\dbunit-tools\notFoundFile.txt
>
> diff dbdef -f1=command/test/notFoundFile.txt -f2=command/test/foundFile.txt
Executing command: [diff, dbdef, -f1=command/test/notFoundFile.txt, -f2=command/test/foundFile.txt]
File1 not found: C:\projects\github\hondams\dbunit-tools\command\test\notFoundFile.txt
>
> diff dbdef -f1=command/test/foundFile.txt -f2=command/test/notFoundFile.txt
Executing command: [diff, dbdef, -f1=command/test/foundFile.txt, -f2=command/test/notFoundFile.txt]
File2 not found: C:\projects\github\hondams\dbunit-tools\command\test\notFoundFile.txt
>
> diff data -d=command/test/notFoundFile.txt -f1=command/test/foundFile.txt -f2=command/test/foundFile.txt
Executing command: [diff, data, -d=command/test/notFoundFile.txt, -f1=command/test/foundFile.txt, -f2=command/test/foundFile.txt]
DbDef File not found: C:\projects\github\hondams\dbunit-tools\command\test\notFoundFile.txt
>
> diff data -d=command/test/foundFile.txt -f1=command/test/notFoundFile.txt -f2=command/test/foundFile.txt
Executing command: [diff, data, -d=command/test/foundFile.txt, -f1=command/test/notFoundFile.txt, -f2=command/test/foundFile.txt]
File1 not found: C:\projects\github\hondams\dbunit-tools\command\test\notFoundFile.txt
>
> diff data -d=command/test/foundFile.txt -f1=command/test/foundFile.txt -f2=command/test/notFoundFile.txt
Executing command: [diff, data, -d=command/test/foundFile.txt, -f1=command/test/foundFile.txt, -f2=command/test/notFoundFile.txt]
File2 not found: C:\projects\github\hondams\dbunit-tools\command\test\notFoundFile.txt
>
> sql query
Executing command: [sql, query]
sql=null, file=null
Usage: query [-f=<file>] [<sql>]
Execute SQL query command
      [<sql>]         SQL query to execute
  -f, --file=<file>   File containing sql to execute
Either <sql> or -file option is required.
>
> sql query "SELECT * FROM DUAL" -f=command/test/foundFile.txt
Executing command: [sql, query, SELECT * FROM DUAL, -f=command/test/foundFile.txt]
sql=SELECT * FROM DUAL, file=command/test/foundFile.txt
Usage: query [-f=<file>] [<sql>]
Execute SQL query command
      [<sql>]         SQL query to execute
  -f, --file=<file>   File containing sql to execute
Either <sql> or -file option is required.
>
> sql query -f=command/test/notFoundFile.txt
Executing command: [sql, query, -f=command/test/notFoundFile.txt]
File not found: command/test/notFoundFile.txt
>
> sql update
Executing command: [sql, update]
sql=null, file=null
Usage: update [-f=<file>] [<sql>]
Execute SQL update command
      [<sql>]         SQL update to execute
  -f, --file=<file>   File containing sql to execute
Either <sql> or -file option is required.
>
> sql update "SELECT * FROM DUAL" -f=command/test/foundFile.txt
Executing command: [sql, update, SELECT * FROM DUAL, -f=command/test/foundFile.txt]
sql=SELECT * FROM DUAL, file=command/test/foundFile.txt
Usage: update [-f=<file>] [<sql>]
Execute SQL update command
      [<sql>]         SQL update to execute
  -f, --file=<file>   File containing sql to execute
Either <sql> or -file option is required.
>
> sql update -f=command/test/notFoundFile.txt
Executing command: [sql, update, -f=command/test/notFoundFile.txt]
File not found: command/test/notFoundFile.txt
>
